краткое описание моих форт-библиотек, многие из них на данный
момент не доведены до совершенства, но иногда вполне работоспособны
расположение подключаемых библиотек как в spf375-spf4;
 ~diver\... - моя "домашняя" директория в devel

					( состояние на 20 окт 2002 )

	-- ring.f
	  реализация кольцевой многозадачности для spf4.

	  возможности:
	  -  реализован кольцевой принцип переключения задач со всеми
	  его плюсами и минусами. задачи работают в общей области памяти,
	  но каждая имеет свои стеки и область памяти, именуемой каналом
	  (слова для работы с ним не определены). скорость переключения
	  задач примерно 2 млн/сек. ( WinME на Pentium 166 )
	  -  добавлены приоритеты: 0 - макс., чем х больше, тем больше задача
	  пропускает оборотов кольца, т.е. приоритет меньше, -1 - задача
	  спит и будет разбужена другой задачей.

	  недостаки:
	  вообще их куча, основные
	  -  портабельности никакой, даже на spf2 не идет, почему-то ???
	  -  переменные общие, никаких USER для задачи в рамках этой модели
	  -  в многозадачном режиме не работает (в потоках windows созданных
	  по TASK: )
	  -  память по завершении не освобождается, не до этого было
	  -  плюс все остальные :-)
	  
	  возможное применение 
	  -  как сопрограммы в рамках форт-слова;
	  -  для реализации многозадачного режима в микроконтроллерных
	  системах управления;
	  -  как возможная основа для многозадачности в Forth OS Максимова,
          хотя у него corporation.f есть и работает она лучше

	  (по крайней мере система приоритетов вроде бы ничего);
	  
	  
	-- 4stack.f
	 режим нескольких стеков данных, написано после прочтения статьи о
	 4-х стековом процессоре ( Bernd Paysan { bernd.paysan@gmx.de } )

	 (крик души: с реальным Форт-железом поработать бы да на реальных
	 скоростных задачах !!!)
	  
	   возможности:
	   -  переключение на многостековый режим при сохранении текущего;
	   -  обмен данными между стеками;
	   -  может быть даже работает в многозадачном режиме;
	   -  вроде бы работет на gforth 0.5.0 (особо не тестировалась) и 
           возможно на bigForth ;
	   
	   недостатки:
	   -  зачем??? т.е. применения пока не получила;

	   
	-- matrix2_1.f
	  версия библиотеки matrix.f от day
	  скомпилированный размер около 9 Kбайт
	  
	   возможности:
	   -  работа в многозадачном режиме (все критические внутренние структу-
	   ры USER..);
	   -  работа с различными типами данных (байты, слова, целые, числа с 
	   плавающей точкой), достигается применением векторных слов, заменя-
	   емых при переключении формата. (для этого пришлось слегка изменить
	   некоторые слова версии 1.2, но все имена и сематника слов сохрани-
	   лась);
	   -  добавлены некоторые операции алгебры матриц - слова: 
	   Транспонировать, СделатьТреугольной, ОпределительМатр, Минор,
	   ПрисоединеннаяМатр, ОбратнаяМатр, и Инициализировать_из_файла;

	   недостатки:
	   -  универсальность универсальностью, но скорость по-моему упала
	   раза в 2-3 по моим оценкам;

	-- spf_floatkern_os.f и float_os.f
	  spf_floatkern_os.f  - переделано из spf_floatkern.f с помощью
	  code.f Дмитрия Якимова для реализации низкоуровневых float-операций
	  в ядре Forth OS Максимова (подключается на этапе компиляции ядра)
          float_os.f  - высокоуровневый старый float Якимова модифицированный
          для этих же целей

        -- fsl-utils.f
          файл со словами для запуска на SP-Forth библиотеки FSL 
          (Forth Scientific Library) - классная матеметическая библиотека на
          форте, есть очеть многое -- вычисление интегралов, преобразования
          Уолша, Фурье, Хартли, комплексная арифметика, полиномы, специальные
          функции и пр. (~50 файлов).
           Скачана с одного из зарубежных форт-сайтов, адреса не записывал, до
          неё добрался через несколько сайтов, если очень надо могу найти, а пока
          пусть будет поближе к народу (к нам :)
           Всю не тестировал, займусь конкретно при случае.

\ ____________________________________________________________________________
в планах:
   -- дальнейшее развитие и модернизация кольца задач - сейчас изучаются 
   реализации многозадачности gforth, bigForth, eForth; цель - увеличить ско-
   рость переключения задач,планирование задач при использовании "штатных" средств;

   -- дальнейшее расширение matrix, возможен выход англоязычной версии (но маловероятен); 
   
   -- запуск библиотеки алгоритмов ЦОС (в стиле FSL);

   -- доработка кросскомпилятора Форта для DSP фирмы ZiLOG: Z893xx (когда-нибудь); 

\ ____________________________________________________________________________
\ ниже следуют программы и либы, работа над которыми была по каким-либо причи-
\ нам остановлена: либо времени нет, либо боевой запал выдохся, иногда и более
\ интересные(полезные?) идеи прорабатываются

	-- comm.f
	  работа с последовательным портом под Windows
	  
	    недостатки:
	    - толком ещё не тестирована;


	-- difur.f (требует defult.dat)
	  решение дифф. уравнений - метод Рунге-Кутта 4-го порядка
	  реализовано прямо по методу без особых примочек, единственное
	  функции f(x,y,t) и g(x,y,t) - форт-слова

	  в defult.dat - решалось уравнение ангармонического осциллятора
	  Дюффинга, так там и осталось
	  
	  создает файл результатов result.dat
