(
* - один проход отладки
** - два прохода отладки (то есть мы уже отладили слово, отлаживали другое,
                          но подумалось вернуться обратно 
*** - три прохода отладки - после этого почти надежно
Если изменений в слове много, то отсчет начинается сначала
)
REQUIRE { lib\ext\locals.f
REQUIRE F. lib\include\float.f

S" ~day\fsim\source\Matrix.f" INCLUDED

4 FFORM !


CREATE Descr 256 ALLOT
0 VALUE LengthDescr

10 VALUE ЧислоИтерацийЭксп
VARIABLE ТикиКвантования
FVARIABLE ПсевдоНоль
.e FVALUE A0
.e FVALUE ТекущееВремя
.1e FVALUE ДлинаКванта
VARIABLE ВходовСумматора
10 ВходовСумматора !


: МассивКоэффициентов \ *
     CREATE 0 C, 20 FLOATS ALLOT
     DOES>
;

МассивКоэффициентов Числитель
МассивКоэффициентов Знаменатель
МассивКоэффициентов НачальныеУсловия
МассивКоэффициентов ПараметрыНелинейности

: k, ( addr1 addr2 -- addr1 addr3 )    \ *
     DUP F!
     FLOAT+
     SWAP >R
     R@ C@ 1+ R@ C!
     R> SWAP
;

: Завершить
     2DROP
;

: C0! ( addr -- )
      0 SWAP C!
;

: Задать DUP C0! DUP 1+ ; \ *

: ПечататьВектор ( id -- ) \ *
     DUP C@ 0 
     DO
       DUP I FLOATS 1+ + F@ F. CR
     LOOP
     DROP
;



0 VALUE МатрФ
0 VALUE МатрГ
0 VALUE МатрВыхода
0 VALUE МатрУправления
0 VALUE МатрСостояния
10 VALUE МаксРазм-ть
0 VALUE Вспомог1
0 VALUE Вспомог2
0 VALUE МатрПСИ
\ 0 VALUE ПоследнийОбъект

: ВспомогМатрицы
    МаксРазм-ть DUP НеименМатр TO Вспомог1
    МаксРазм-ть DUP НеименМатр TO Вспомог2
;

: ОсвободитьВспомог 
    Вспомог1 Освободить
    Вспомог2 Освободить
;
: РазделитьЭлемент ( addr F: r -- ) \ *
    DUP F@ FSWAP F/ F!
;
\ Делим весь знаменатель и числитель на a[n]
: СформироватьЗнаменатель ( -- ) \ *
    Знаменатель C@ 1 < IF EXIT THEN
    Знаменатель 1+ F@ FDUP FTO A0 
    Знаменатель C@
    0 DO
        I FLOATS Знаменатель 1+ + FDUP РазделитьЭлемент
      LOOP
    Числитель C@ 1 < IF EXIT THEN
    Числитель C@
    0 DO
        I FLOATS Числитель 1+ + FDUP РазделитьЭлемент
      LOOP
    FDROP
;
: РазобратьЗнаменатель \ *
    МатрСостояния ТекущаяМатр1
    Знаменатель C@ 1-
    DUP 0= IF DROP EXIT THEN 
    0 DO
        I 1+ FLOATS Знаменатель 1+ + F@ FNEGATE
        Строк1 1- Столбцов1 1- I -  МатрСостояния ДатьЭлемент
      LOOP
;

: ФормироватьСостояние    \ *
    Знаменатель C@ 1- DUP НеименМатр 
    DUP TO МатрСостояния 
    ЕденицыНадДиагональю             
    СформироватьЗнаменатель 
    РазобратьЗнаменатель   
;

0 VALUE МатрицаПСИ
0 VALUE Временная1
0 VALUE МатрС
0 VALUE МатрБ        \ матрица Б - управления
                     \ - вектор nx1

\ Матрица входа 1xn - управляем по 1-му каналу
\ Матрица выхода зависит от числителя
: PM DUP ПечататьМатрицу CR ;
: ФормироватьМатрПСИ            \ **
    МатрСостояния DUP >R НоваяМатр TO МатрПСИ
    R@ НоваяМатр TO Временная
    R> НоваяМатр TO Временная1 
    Временная DUP СделатьЕдиничной ДлинаКванта Матр*Число
    Временная МатрПСИ КопироватьМатр
    ЧислоИтерацийЭксп 2
    DO
      МатрСостояния Временная Временная1 Матр*
      Временная1 ДлинаКванта Матр*Число        
      I DS>F Временная1 Матр/Число 
      МатрПСИ  Временная1 Матр+
      Временная Временная1 TO Временная TO Временная1 
    LOOP 
    Временная  Освободить
    Временная1 Освободить
;

\ Ф=I+А*ПСИ
: ФормироватьМатрФ \ *
    МатрСостояния НоваяМатр TO МатрФ
    МатрСостояния НоваяМатр TO Временная
    МатрСостояния МатрПСИ МатрФ Матр*
    Временная СделатьЕдиничной
    МатрФ Временная Матр+
    Временная  Освободить
;

\ Матрица выхода 1xn - `C`
: ФормироватьС            \ **
     МатрСостояния ВзятьПараметры NIP 1 SWAP НеименМатр TO МатрС
     МатрС DUP .e  Инициализировать
     ТекущаяМатр1  
     Числитель C@ 0 
     DO
       Числитель DUP C@ I - 1- FLOATS + 1+ F@ 
       0 I НачалоМатр1 ДатьЭлемент
     LOOP
;             
: ФормироватьВыход
  1 1 НеименМатр TO МатрВыхода
  МатрВыхода .e Инициализировать
;
\ формируем матрБ
\ Б= | 0   |
\    | 0   |
\    | ... |
\    | 1/A0|

: ФормироватьБ  \ *
    МатрСостояния ВзятьПараметры DROP 
    1 НеименМатр  TO МатрБ 
    МатрБ ТекущаяМатр1 
    НачалоМатр1 .e Инициализировать
    1.e A0 F/ 
    Строк1 1- 0 НачалоМатр1  ДатьЭлемент
;
\ Г= | x   |
\    | x   |
\    | ... |
\    | x   |
\ Г = последний столбец матрицы ПСИ
: ФормироватьГ  \ *
    МатрСостояния ВзятьПараметры DROP 1 НеименМатр TO МатрГ
    МатрПСИ МатрБ МатрГ Матр*
;
: ЗаписатьМатрицыФГ
  МатрФ , МатрГ ,
;
: ЗаписатьВыход
  МатрВыхода ,
;

: ЗаписатьС
  МатрС ,
;
\ Матр состояния отработала и уже не нужна
: ЗаписатьСостояние           \ **
    НачальныеУсловия >R      
    МатрСостояния ВзятьПараметры 
    МатрСостояния Освободить 
    DROP 1 НеименМатр DUP 
    TO МатрСостояния ,
    МатрСостояния .e Инициализировать
    R@ 1+ МатрСостояния 4 +
    R> C@ FLOATS CMOVE
;

\ матрица размером в 1 элемент
CREATE ПсевдоМатр 1 W, 1 W, .e F,

: ЗаписатьУправление
    ПсевдоМатр , 
;
: ЗакончитьМатр
      МатрБ Освободить
      МатрПСИ Освободить
;

\ Формат объекта таков - 4 - указатель на матрицу выхода
\                        4 - указатель на состояние предыдущего объекта
\                        4 - указатель на матрицу Ф
\                        4 - указатель на матрицу Г
\                        4 - указатель на свое состояние
\                        4 - указатель на матрицу С



: `РазобратьАдреса ( -- )
    DUP >R       @ TO МатрВыхода
    R@ 1 CELLS + @ TO МатрУправления 
    R@ 2 CELLS + @ TO МатрФ
    R@ 3 CELLS + @ TO МатрГ
    R@ 4 CELLS + @ TO МатрСостояния
    R> 5 CELLS + @ TO МатрС
;
: `Состояние*Ф  ( -- )
    МатрФ МатрСостояния Вспомог1 Матр*
;
: `Управление*Г ( -- )
      0 0 МатрУправления ВзятьЭлемент 
      МатрГ Вспомог2 КопироватьМатр
      Вспомог2 Матр*Число
;
: `Сложить ( -- )
    Вспомог2 Вспомог1 Матр+
;
: `ЗаписатьСостояние ( -- )
    Вспомог2 МатрСостояния КопироватьМатр
;
: `ФормироватьВыход  ( -- )
    МатрС Вспомог2 МатрВыхода Матр*
;
: СоздатьЛинейное
  CREATE 
    ФормироватьСостояние
    ФормироватьМатрПСИ 
    ФормироватьМатрФ
    ФормироватьБ
    ФормироватьГ
    ФормироватьС
    ФормироватьВыход
    ЗаписатьВыход
    ЗаписатьУправление
    ЗаписатьМатрицыФГ
    ЗаписатьСостояние 
    ЗаписатьС         
    ЗакончитьМатр    
  DOES>
     `РазобратьАдреса 
\      МатрФ ПечататьМатрицу CR
\     МатрГ ПечататьМатрицу CR
\     МатрВыхода  ПечататьМатрицу 
\     МатрСостояния ПечататьМатрицу CR
\     МатрУправления ПечататьМатрицу CR
\     МатрС ПечататьМатрицу CR
    `Состояние*Ф     
    `Управление*Г    
    `Сложить 
    `ЗаписатьСостояние
    `ФормироватьВыход
;
    
CREATE ИсполнительныйВектор 0 C, 100 4 * ALLOT
S" ~day\fsim\source\graph.f" INCLUDED

: ?УжеЕсть ( addr -- f )
   0 SWAP ИсполнительныйВектор C@
   DUP 0= IF 2DROP DROP 0 EXIT THEN
   0
   DO
     ИсполнительныйВектор I CELLS 1+ +
     @ OVER = IF SWAP 1- SWAP LEAVE THEN
   LOOP
   DROP
;

: ДобавитьВектор ( addr -- )     
    DUP ?УжеЕсть INVERT 
    IF
      ИсполнительныйВектор DUP >R
      C@ CELLS 1+ R@ + ! 
      R@ C@ 1+ R> C!
    ELSE DROP
    THEN
;

\ Если звенья не связаны

: Звено:
   ' DUP ДобавитьВектор
;
: ЧислоТиков
    КонВремяГрафика НачВремяГрафика F- ДлинаКванта F/
    F>DS
;
: Расчет ( -- )
    ВспомогМатрицы
    ЧислоТиков DUP 0= IF TRUE ABORT" Время не определено" THEN
    0 
    DO
      ИсполнительныйВектор
      C@ DUP 0= IF TRUE ABORT" Нет связей" THEN
      0 
      DO
        I CELLS ИсполнительныйВектор + 1+ @ EXECUTE 
      LOOP
      ТекущееВремя ДлинаКванта F+ FTO ТекущееВремя 
    LOOP
    ОсвободитьВспомог
;

: Время ( n -- )
      DS>F  FTO КонВремяГрафика 
         .e FTO НачВремяГрафика 
;

0 VALUE ФлагВремяПП
0 VALUE ФлагПеререгулирование
0 VALUE ФлагСетка
0 VALUE ЧислоЛинийСетки
11 VALUE ЧислоРисокX
11 VALUE ЧислоРисокY
3 VALUE ЗнаковПослеТочки

S" ~day\fsim\source\windows.f" INCLUDED

: РазобратьОбъект
   >BODY `РазобратьАдреса
;

\ 4 - ссылка на матрицу значений
\ 4 - ссылка на источник
: СоздатьМассив \ **
    CREATE ( -- )
      1 ЧислоТиков НеименМатр
      DUP , 0 SWAP W!
      ПсевдоМатр ,
    DOES>  ( -- ) \ считываем первый элемент и добавляем в массив
      DUP >R
      CELL+ @ 0 0 ROT ВзятьЭлемент 
      R@ @ ВзятьПараметры 1+ R@ @ ДатьПараметры
      0 R@ @ ВзятьПараметры NIP 1- 
      R> @ ДатьЭлемент
;

: Объект ' >BODY @ ;
: Связь
   ' DUP ДобавитьВектор >BODY @
;
: >> 
   ' DUP ДобавитьВектор >BODY CELL+ !
;
: СтроитьГрафик
     Объект DUP Масштаб СоздатьОкно
;

10 VALUE МаксСумматор

: ПервыйЭлемент
    0 0 ROT 
;
: ВходВыход,
   1 1 НеименМатр DUP , .e Инициализировать
   ПсевдоМатр ,
;
: ОдинПараметр
   ВходВыход, F, 
;
: ДваПараметра
   ВходВыход,
   F, F,
;
: ТриПараметра
   ВходВыход,
   F, F, F,
;

: СоздатьСумматор \ nt
     CREATE ( "name" -- )
         1 1 НеименМатр DUP , .e Инициализировать         
         0 C, МаксСумматор CELLS 2* ALLOT
     DOES>            
         .e  
         DUP CELL+ 1+ DUP 1-
         C@ 0 
         DO
           DUP @ >R      
           CELL+ DUP @ ПервыйЭлемент ВзятьЭлемент 
           CELL+ 
           R> DS>F F* F+
         LOOP 
         DROP
         @ ПервыйЭлемент ДатьЭлемент 
;

: СоздатьУмножатель \ nt
     CREATE ( "name" -- )
         1 1 НеименМатр DUP , .e Инициализировать         
         0 C, МаксСумматор CELLS 2* ALLOT
     DOES>            
         .e  
         DUP CELL+ 1+ DUP 1-
         C@ 0 
         DO
           DUP @ >R      
           CELL+ DUP @ ПервыйЭлемент ВзятьЭлемент 
           CELL+ 
           R> DS>F F* F*
         LOOP 
         DROP
         @ ПервыйЭлемент ДатьЭлемент 
;


\ добавляет к сумматору коэффициент и за ним addr
: ++ ( addr n -- )
    ' DUP ДобавитьВектор
    >BODY CELL+ DUP DUP >R 
    C@ CELLS 2* + 1+ DUP >R ! R> CELL+ ! 
    R@ C@ 1+ R> C!    
;
: Печатать TRUE ;
: НеПечатать FALSE ;

: ВремяПП ( f -- )
     TO ФлагВремяПП
;
: Перерегулирование ( f -- )
     TO ФлагПеререгулирование
;
: Сетку
     TO ФлагСетка
;
: ЧислоЛиний
    TO ЧислоЛинийСетки
;

: ЗнаковПослеТочки TO ЗнаковПослеТочки ;

: ПечататьВСтолбец ( id -- )
    ТекущаяМатр1
    Столбцов1 0    
    DO
      Строк1 0
      DO
        I J НачалоМатр1 ВзятьЭлемент F. SPACE
      LOOP
      CR
    LOOP
;

: ВывестиВФайл ( id "name" -- )
    >R
    BL WORD COUNT
    W/O CREATE-FILE THROW 
    DUP H-STDOUT SWAP
    TO H-STDOUT
    R> ПечататьВСтолбец
    TO H-STDOUT
    CLOSE-FILE THROW
;

0 VALUE АдрОбъекта

: 1Параметр
    АдрОбъекта 2 CELLS + F@
;
: 2Параметр
    АдрОбъекта  2 CELLS + FLOAT+ F@
;
: 3Параметр
    АдрОбъекта  2 CELLS + 2 FLOATS + F@
; 

: ХранимОбъект
     TO АдрОбъекта
;
: ЧитатьВход
     0 0 АдрОбъекта CELL+ @ ВзятьЭлемент
;
: ПисатьВыход
     0 0 АдрОбъекта @ ДатьЭлемент
;

: СоздатьИдеальноеРеле \ *
    CREATE 
         ОдинПараметр 
    DOES>
         ХранимОбъект
         1Параметр
         ЧитатьВход
         F0< IF FNEGATE THEN 
         ПисатьВыход
;

\ В памяти Частота Сдвиг Амплитуда 
\ Параметры Амплитуда Сдвиг Частота  

: СоздатьСинусоиду ( F: r1 r2 r3 -- ) \ *
    CREATE 
          ТриПараметра
    DOES> ( -- )
          ХранимОбъект
          1Параметр ТекущееВремя F* 
          2Параметр F+ FSIN
          3Параметр F*
          ПисатьВыход
;

: СоздатьВентиль  \ !!!
    CREATE 
         ОдинПараметр
    DOES>
         ХранимОбъект
         1Параметр
         ТекущееВремя F< 
         IF 
           ЧитатьВход
           ПисатьВыход
         THEN
;
: СоздатьСдвиг  \ *
    CREATE 
         ОдинПараметр
    DOES>             
         ХранимОбъект 
         1Параметр    
         ЧитатьВход F+
         ПисатьВыход
;
: Воздействие 
    CREATE 
         ОдинПараметр
    DOES>             
         ХранимОбъект 
         1Параметр    
         ПисатьВыход
;

: СоздатьКоэффициент
  CREATE 
         ОдинПараметр
    DOES>             
         ХранимОбъект 
         1Параметр    
         ЧитатьВход F*
         ПисатьВыход
;

: АдрПараметров
    АдрОбъекта 8 +
;

: ВзятьX ( n -- F: r ) 
    2* FLOATS АдрПараметров + 1+ F@ 
;
: ВзятьY ( n -- F: r )
    2* 1+ FLOATS 1+ АдрПараметров + F@
;
   
: PD FDUP F. CR ;

: FMAX 1e300 ;

\ Хранится в виде n, X1, Y1, X2, Y2, ...
: СоздатьНелинейное
    CREATE
        ВходВыход, HERE >R
        ПараметрыНелинейности DUP C@ FLOATS 1+ DUP ALLOT
        R> SWAP CMOVE 
    DOES>
        ХранимОбъект
        АдрПараметров C@ 2/ 0 
        DO
            ЧитатьВход I
            ВзятьX F<                     \ вход <= интервалу
            IF I LEAVE THEN               \ Рано или поздно выйдем  
        LOOP 
        >R 
        R@ ВзятьX ЧитатьВход F- 
        R@ ВзятьX R@ 1- ВзятьX  F-  F/ 
        R@ ВзятьY R@ 1- ВзятьY F- F* 
        R> ВзятьY FSWAP F- 
        ПисатьВыход 
;


: -FMAX FMAX FNEGATE ;             

.e FVALUE 1Переменная
.e FVALUE 2Переменная
.e FVALUE 3Переменная

: ОднаПеременная
   FTO 1Переменная
;
: ДвеПеременные
   FTO 2Переменная
   FTO 1Переменная
;
: ТриПеременные
   FTO 3Переменная
   FTO 2Переменная
   FTO 1Переменная
;
\ должен быть независим от текущего времени
\ - относителен     
\ in mem: выход вход буфер счетчик

0 VALUE АдрСчетчика
0 VALUE АдрБуфера

: СоздатьЗапаздывание ( F: r -- )
   CREATE
      ВходВыход, 
      ДлинаКванта  F/ F>DS 1 SWAP
      НеименМатр DUP , .e Инициализировать
      0 ,
   DOES>
      ХранимОбъект
      АдрОбъекта 3 CELLS +   TO АдрСчетчика
      АдрОбъекта 2 CELLS + @ TO АдрБуфера

      0 АдрСчетчика @ АдрБуфера ВзятьЭлемент \ Выдаем текущий
      ПисатьВыход

      ЧитатьВход                             \ Вход в элемент на кот указ
      0 АдрСчетчика @ АдрБуфера ДатьЭлемент  \ счетчик
        
      АдрБуфера ВзятьПараметры NIP           \ Передвигаем счетчик  
      АдрСчетчика @ 1+ =  IF                    \ буфер завернут в кольцо
                         АдрСчетчика 0!
                       ELSE
                         АдрСчетчика 1+!    
                       THEN
;      
  
: ДлинаКванта FTO ДлинаКванта ;

: ,, , ;
: , k, ;

: СоздатьИдеальноеРеле ( F: r -- )
   ОднаПеременная
   ПараметрыНелинейности Задать
     -FMAX , 1Переменная FNEGATE ,
     .e    , 1Переменная FNEGATE , 
     .e    , 1Переменная , 
     FMAX  , 1Переменная , 
   Завершить
   СоздатьНелинейное
;  

: Описание:
   0 PARSE DUP TO LengthDescr
   Descr SWAP CMOVE
;

WINAPI: MessageBoxA USER32.DLL
HEX
 00001000 CONSTANT MB_SYSTEMMODAL
DECIMAL 

: ShowMessage ( addr u -- )
   DROP >R MB_SYSTEMMODAL S" forthsim" DROP R>  0 MessageBoxA DROP
;

: error ( addr u -- )
   DROP >R MB_SYSTEMMODAL S" Ошибка!" DROP R>  0 MessageBoxA DROP
;

: TEXT: ( "text" )
  CREATE HERE >R 0 ,, REFILL DROP
    BEGIN
      0 PARSE
      OVER DUP C@ [CHAR] . <>
      SWAP 1+ C@ 13 <> OR
      IF 
        DUP 2 + R@ +!
        HERE OVER ALLOT
        SWAP CMOVE [ HEX ] 0D C, 0A C, [ DECIMAL ]
        REFILL 0=
      ELSE 2DROP -1
      THEN
    UNTIL R> DROP 0 C,
;

TEXT: Splash
Моделирование линейных\нелинейных\дискретных\непрерывных
систем а также графическое решение систем  диф. уравнений

2000 Д. Якимов ftech@mail.ru
Запуск: FORTHSIM имя-файла.fs

Modeling of linear\nonlinear\discret systems and
graphic solving of differential equations.
2000 (c) Dmitry Yakimov
Usage: FORTHSIM file_name.fs
.

: RUN  \ интерпретировать командную строку
  GetCommandLineA ASCIIZ>
  TIB SWAP C/L MIN DUP #TIB ! MOVE >IN 0!
  TIB C@ [CHAR] " = IF [CHAR] " ELSE BL THEN
  WORD DROP \ имя программы
  BL WORD COUNT
  ?DUP 0= IF
              Splash DUP @ SWAP CELL+ SWAP  
              ShowMessage
              BYE
          THEN
  OVER C@ [CHAR] " = IF 2 - SWAP 1+ SWAP THEN ( убрал кавычки, если есть)
  2DUP + 0 SWAP C!
  ['] INCLUDED CATCH ?DUP IF 0 <# #S #>  error THEN
  BYE
;

lib\ext\caseins.f

\ STARTLOG S" ..\test.fs" INCLUDED  BYE
 TRUE TO ?GUI
 ' RUN MAINX !

 HERE IMAGE-BASE - 30000 + TO IMAGE-SIZE
 S" ..\forthsim.exe" SAVE BYE
