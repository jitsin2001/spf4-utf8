14.01.04 1.6    + изменения от ~ruv
                + компиляция с последним SPF4
                
01.02.01 1.5    + Добавлена возможность работы с ActiveX контролами и VMT
                + Возможность перегружать слова сделанные по ->WM
                  Слово INHERITWM

11.11.00 1.02   + компиляция абстрактных методов словом x: в oop.f
                + в control.f добавлен ScrollBar + с помощью public
                  переменных style, exStyle возможно изменение стиля контролов
                  перед созданием
                + Новый красивый пример: samples\htmlcol.exe
                + win\clipboard.f
                  win\colordialog.f
                  lib\filestream.f
                ! win\control.f теперь не подключается автоматически, поэтому
                  размер clock.exe, magnify.exe уменьшился на 2 килобайта.
                ! откровенный баг в template.f при сохранении exe
                ! Баг в FrameWindow.f - :modalResult!

04.11.00 1.01   + Слово >CLASS для статической компиляции методов класса (micro)
                  Теперь возможен такой вызов метода класса:
                  ALSO
                    >CLASS MyClass
                      :my_method1
                      :my_method2
                    >CLASS YourClass
                      :your_method
                  PREVIOUS
                  То есть можно использовать jOOP только для управления
                  словарями. В этом случае конечно, не обязательно двоеточие
                  в начале методов, так как self не устанавливается 
                  (вы не должны его использовать явно вызывая).
                  Рекомендую обзывать имена статических классов с буквы S,
                  хотя если статика, то можно без jOOP обойтись.
                
                + Неплохая поддержка двухсвязных списков в lib\list.f

27.10.00 1.0 -  + Слово CLASS: сохраняет CURRENT в спец. переменной,
                  ;CLASS восстанавливает это значение. Теперь возможна
                  полностью компиляция класса в другом словаре,
                  то есть возможны классы в данном контексте!
                  Например, класс Picture в словаре JPEG выполняет
                  одни ф-ии, класс Picture в словаре BMP - другие.
                  (При одних и тех же методах).

                  Для того чтобы можно было компилировать вложенные классы,
                  необходимо делать стековыми не только CURRENT переменную,
                  но еще несколько. Где их хранить? jOOP не роскошь,
                  а средство эффективного программирования.

                ! Немного переделана логика работы с Windows classes
                  - если ваши приложения используют свои windows classes -
                  см. win\clock.f для примера.
                + Заготовка win\template.f - начало вашего gui проекта
                + Новая версия clock.f - можно менять шрифт
                
21.10.00 0.99 sp1
                + Новый Windows пример joop\samples\fsaver.scr,
                  уже скомпиленный - форт скринсейвер.
                + Переделан joop\samples\magnify
                + Улучшены библиотеки FrameWindow.f и fwunc.f
                ! Корректное уничтожение меню (а вернее неуничтожение)
                  в win\FrameWindow.f

15.10.00 0.99 - + Теперь WARNING не выдаются при компиляции метода, если
                  уже есть сообщение, соответствующее этому методу (micro)
                + Все слова, используемые в классе перемещены в словарь
                  ClassContext (micro)
                + Исправлен win\wintest.f - немного уменьшен размер exe

09.10.00 0.95 - + Если сообщение уже создано, то попытки скомпилировать
                  его заново игнорируются (не путать сообщение с методом!)
                + Встроенная поддержка работы с Windows объектами!
                + метод :methods - показывает методы класса.
                + метод :variables - sas
                + Поддержка структур - моя уступка Windows и вообще всем ОС
                + метод :newLit - создает объект в словарном пространстве
                + метод :init - инициализация экземпляра класса после создания
                + public переменные
                + Объектная оболочка над Windows в каталоге \win
                
19.09.00 0.9  - + при выделении памяти под объект в -1 ячейку записывается
                  теперь указатель на класс - для мониторинга хипа в спф 3.75
                + метод :see для мониторинга переменных класса
                + метод :unknown теперь ищется рекурсивно (так короче)
                + Формат данных переменной теперь следующий:
                  4 - смещение в экземпляре
                  4 - размер

18.09.00 0.8  - первая действительно рабочая версия
