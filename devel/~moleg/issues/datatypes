\ 18-04-2007 ~mOleg
\ Copyright [C] 2006 mOleg mininoleg@yahoo.com
\ Немного поговорим о работе с памятью.

        Несмотря на то, что форт считается безтиповым языком, размерность
различных типов данных он вынужден различать. В классическом форте работающем
с базовой разрядностью данных 32бита есть следующие типы данных и слова для
работы с ними:
╔═══════════════════════╤══════════════════════════════════════════════════╗
║ размер данных         │ слова для работы с данными указанной разрядности ║
╟───────────────────────┼──────────────────────────────────────────────────╢
║ char = 8 bit = 1 byte │ C@ C! C,                                         ║
║ byte = 8 bit = 1 char │ никак не учитывается тот факт, что char может    ║
║                       │ быть больше чем байт и вообще иметь произвольную ║
║                       │ ширину.                                          ║
║ word = 2 bytes        │ W@ W! W,                                         ║
║ cell = 4 bytes        │ @ ! ,                                            ║
║ double = 2 cells      │ 2@ 2!                                            ║
║ string = 0-?chars     │ S", S" COUNT                                     ║
╚═══════════════════════╧══════════════════════════════════════════════════╝

Все бы хорошо, но есть несколько нехороших моментов.
Первый - минимально адресуемая единица памяти может быть не кратна 8-и битам
         ( может быть 10бит, 12, 16, 20, 21, 30, 32 и неизвестно какую еще )
         этот факт пока можно проигнорировать, потому что он пока что актуален
         лишь для микроконтроллеров.
Второй - один символ не всегда может влазить в один байт ( может быть два
         байта, может быть и 4, а может быть вообще переменная длинна).
Третий - размер адресной ссылки может не совпадать с размером CELL
         ( причем отличия могут быть в любую сторону то есть
           CELL може быть меньше, даже в два раза, чем размер адресной ссылки,
           а может быть и в два раза больше )

Для того, чтобы сделать программы более независимыми от разрядности типов
данных в форте добавлены следующие слова:
  CELL  = размер базового типа, с которым форт работает на стеке данных,
          в колличестве минимально адресуемых единиц(обычно байт).
  CELLS = посчитать, сколько места займет указанное кол-во ячеек базового
          типа.
  CHARS = посчитать сколько места займет указанное количество символов.

И все. Мне кажется, что указанных выше средств не достаточно, для удобного
различения разрядности различных типов данных. Для начала стоит признать,
что байты - могут быть не равны символам, а адреса могут быть не равны CELLам.
Вобщем, стоит ввести дополнительные слова для работы с перечисленными типами
данных:
        B@ B! B, - для работы с байтами
        A@ A! A, ADDR - для работы с адресами
Такое дополнение базового словаря даст еще одно преимущество - мы начнем
различать, где у нас идет работа с данными, где работа с байтами( а не с
символами), ну и где у нас работа с адресными ссылками, то есть текст станет
более читабельным.